install.packages("maltab")
install.packages("matlab")
library(matlab)
(magic4 <- magic(4))
rowSums(magic4)
apply(magic4,sum,1)
apply(magic4,1,sum)
apply(magic4,1,toString)
apply(magic4,2,toString)
(baldwins <- data.frame(    name             = c("Alec", "Daniel", "Billy", "Stephen"),    date_of_birth    = c(        "1958-Apr-03", "1960-Oct-05", "1963-Feb-21", "1966-May-12"    ),    n_spouses = c(2, 3, 1, 1), n_children = c(1, 5, 3, 2), stringsAsFactors = FALSE))
(baldwins <- data.frame(    name             = c("Alec", "Daniel", "Billy", "Stephen"),    date_of_birth    = c(        "1958-Apr-03", "1960-Oct-05", "1963-Feb-21", "1966-May-12"    ),    n_spouses = c(2, 3, 1, 1), n_children = c(1, 5, 3, 2), stringsAsFactors = FALSE))
(baldwins <- data.frame(  name             = c("Alec", "Daniel", "Billy", "Stephen"),  date_of_birth    = c(    "1958-Apr-03", "1960-Oct-05", "1963-Feb-21", "1966-May-12"  ),  n_spouses = c(2, 3, 1, 1), n_children = c(1, 5, 3, 2), stringsAsFactors = FALSE))
(baldwins <- data.frame(  name             = c("Alec", "Daniel", "Billy", "Stephen"),  date_of_birth    = c(    "1958-Apr-03", "1960-Oct-05", "1963-Feb-21", "1966-May-12"  ),  n_spouses = c(2, 3, 1, 1), n_children = c(1, 5, 3, 2), stringsAsFactors = FALSE))
(baldwins <- data.frame(
name             = c("Alec", "Daniel", "Billy", "Stephen"),
date_of_birth    = c(
"1958-Apr-03", "1960-Oct-05", "1963-Feb-21", "1966-May-12"
),
n_spouses = c(2, 3, 1, 1), n_children = c(1, 5, 3, 2), stringsAsFactors = FALSE
))
applyu(baldwins,1,toString)
apply(baldwins,1,toString)
apply(baldwins,2,toString)
sapply(baldwins,range)
sapply(baldwins,range)
baby_gender_report <- function(gender)
{
switch(
gender,
male = "It's a boy",
female = "It's a girl",
"um..."
)
}
genders <- c(
"male","male","female","male","female")
baby_gender_report(genders)
vectorized_baby_gender_reporter <- Vectorize(baby_gender_report)
vectorized_baby_gender_reporter(genders)
Vectorize
rep(c("Tom", "Dick", "Harry"), times = c(2, 5, 3)
(rep(c("Tom", "Dick", "Harry"), times = c(2, 5, 3))
(rep(c("Tom", "Dick", "Harry"), times = c(2, 5, 3)))
(frogger_scores <- data.frame(
player = rep(c("Tom", "Dick", "Harry"), times = c(2, 5, 3)),
score  = round(rlnorm(10, 8), -1)
))
?rlnorm
tapply(score,player,mean)
with(frogger_scores,tapply(score,player,mean))
?with
?tapply
primes
frogger_scores$level <- floor(log(frogger_scores$score))
frogger_scores
library(plyr)
ddply(frogger_scores,colwise(mean))
ddply(frogger_scores,.(plyer), colwise(mean))
ddply(frogger_scores,.(player), colwise(mean))
ddply(frogger_scores,.(player),summarize,mean_score=mean(score),max_level=max(level))
x <- c(rnorm(10),runif(10),rnorm(10,1))
x
f <- gl(3,10)
f
?gl
ss <- split(x,f)
ss
class(ss)
library(datasets)
data(iris)
?iris
head(iris)
iris[,Species=="virginica"]
iris[,iris$Species=="virginica"]
iris[,"virginica"]
iris[,iris$virginica]
(iris[,iris$Sepcies])
iris[,iris$Species == "virginica"]
iris$Species
as.factor(iris$Species)
iris[,iris$Species == "virginica"]
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica",]
?ddply
ddply(iris,.(Species),Sepal.length,mean)
ddply(iris,.(Species),Sepal.Length,mean)
ddply(iris,.(Species),Sepal.Length,mean)
ddply(iris,.(Species),colwise(Sepal.Length),mean)
ddply(iris,.(Species),colwise(mean))
apply(iris[, 1:4], 1, mean)
?apply
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
data(mtcars)
head(mecars)
head(mtcars)
?tapply
with(mtcars,tapply(mtcars$cyl,mtcars$mpg,mean))
ddply(mtcars,.(mpg),colwise(mean))
?mtcars
ddply(mtcars,.(cyl),colwise(mean))
209.21429 - 82.63636
debug(ls)
ls
ls()
quit
./
""
q
2
1
2
3
quit
ls
ls()
quit
end
quit()
Q()
q()
x <- c(1,2,3,4,5)
p <- c(0.1,0.25,0.35,0.2,0.1)
x * p
sum(x*p)
e <- sum(x*p)
e
sum((x - e)^2)
sum(((x - e)*c)^2)
sum(((x - e)*p)^2)
sum((((x - e)^2)*p))
?var
?pvar
var(x)
?exp
ã…Š <- (-2,23,48,73,98)
x <- (-2,23,48,73,98)
x <- c(-2,23,48,73,98)
p <- c(0.977,0.008,0.008,0.006,0.001)
sum(x*p)
e <- sum(x*p)
e
sum((x-e)^2)*p)
sum((x-e)^2)*p))
sum(((x-e)^2)*p)
sqr67.4275
sqr(sum(((x-e)^2)*p))
?sqr
setwd("~/Study/coursera-projects/RepData_PeerAssessment2")
rawdata <- read.table(unz("./data/repdata-data-StormData.csv.bz2","stormData.csv"))
?unz
rawdata <- read.table(unz("./data/repdata-data-StormData.csv.bz2"))
rawdata <- read.table(unz(description="./data/repdata-data-StormData.csv.bz2",filename="./data/stormData.csv",open="r"))
?bzfile
rawdata <- read.table(bzfile(description="./data/repdata-data-StormData.csv.bz2",filename="./data/stormData.csv",open="r"))
rawdata <- read.table(bzfile(description="./data/repdata-data-StormData.csv.bz2",open="r"))
rawdata <- read.table(bzfile(description="./data/repdata-data-StormData.csv.bz2",open="r"), sep="," , header=T)
View(rawdata)
?bzfile
source('~/Study/coursera-projects/RepData_PeerAssessment2/peerAssessment2.R')
View(rawdata)
?rnorm
sampleIndicator <- rnorm(nrow(rawData))
sampleIndicator <- rnorm(nrow(rawdata))
rawdata$samplekey <- sampleIndicator
summary(sampleIndicator)
quantile(sampleIndicator,probs=c(0.1))
rawSample <- rawdata[,rawdata$samplekey < quantile(sampleIndicator,probs=c(0.1)) ]
rawSample <- rawdata[,rawdata$samplekey < quantile(rawdata$samplekey,probs=c(0.1)) ]
rawSample <- subset(rawdata,samplekey < quantile(samplekey,probs=c(0.1)))
save(rawSample,"./data/rawSampled.rds")
?save
save(rawSample,file="./data/rawSampled.rds")
rawSample <- subset(rawdata,samplekey < quantile(samplekey,probs=c(0.01)))
save(rawSample,file="./data/rawSampled.rds")
save(rawSample,file="./data/rawSampled.rds")
View(rawSample)
names(rawSample)
stromData<- subset(rawdata,samplekey < quantile(samplekey,probs=c(0.01)))
save(rawSample,file="./data/rawSampled.rds")
summary(stromData)
summary(stromData$EVTYPE)
summary(stromData$FATALITIES)
str(stromData$FATALITIES)
summary(stromData$INJURIES)
stormData<- subset(rawdata,samplekey < quantile(samplekey,probs=c(0.01)))
save(rawSample,file="./data/rawSampled.rds")
stormData$health <- stormData$FATALITIES + stormData$INJURIES
summary(stormData$health)
library(plyr)
healthByEvtype <- ddply(stormData, .(EVTYPE), summarise, total.health = sum(health))
summary(healthByEvtype)
healthByEvtype <- transform(healthByEvtype, EVTYPE = reorder(EVTYPE, total.health))
summary(healthByEvtype)
library(ggplot2)
ggplot(healthByEvtype)+ geom_bar(aes(x=EVTYPE,y=total.health),
stat="identity", fill="gray") +
coord_flip() +
theme(axis.text.y=element_text(size=rel(0.8)))
colnames(stormData)
zipFile <- bzfile(description="./data/repdata-data-StormData.csv.bz2",open="r")
stormData<- read.table(zipFile, sep="," , header=T)
close(zipFile)
summary(stormData$EVTYPE)
str(stormData$EVTYPE)
stormData$EVTYPE
x <- unique(stormData$EVTYPE)
x
zipFile <- bzfile(description="./data/repdata-data-StormData.csv.bz2",open="r")
stormData<- read.csv(zipFile, sep="," , header=T)
close(zipFile)
str(stormData$EVTYPE)
x <- unique(stormData$EVTYPE)
x
zipFile <- bzfile(description="./data/repdata-data-StormData.csv.bz2",open="r")
stormData<- read.csv(zipFile, sep="," , header=T, comment.char="")
close(zipFile)
str(stormData$EVTYPE)
library(plyr)
library(ggplot2)
summary(stormData$FATALITIES)
summary(stormData$INJURIES)
stormData$health <- stormData$FATALITIES + stormData$INJURIES
summary(stormData$health)
stormData[,stormData$health > 0]
subset(stormData, health > 0)
healthByEvtype <- ddply(subset(stormData, health > 0), .(EVTYPE), summarise, total.health = sum(health))
summary(healthByEvtype)
healthByEvtype <- transform(healthByEvtype, EVTYPE = reorder(EVTYPE, total.health))
summary(healthByEvtype)
ggplot(healthByEvtype)+ geom_bar(aes(x=EVTYPE,y=total.health), stat="identity", fill="gray") +
coord_flip() +  theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(healthByEvtype[1:50,])+ geom_bar(aes(x=EVTYPE,y=total.health), stat="identity", fill="gray") +
coord_flip() +  theme(axis.text.y=element_text(size=rel(0.8)))
healthByEvtype <- transform(healthByEvtype, EVTYPE = reorder(EVTYPE, total.health))[1:20]
healthByEvtype <- transform(healthByEvtype, EVTYPE = reorder(EVTYPE, total.health))[1:20,]
summary(healthByEvtype)
ggplot(healthByEvtype)+ geom_bar(aes(x=EVTYPE,y=total.health), stat="identity", fill="gray") +
coord_flip() +  theme(axis.text.y=element_text(size=rel(0.8)))
View(healthByEvtype)
healthByEvtype <- ddply(subset(stormData, health > 0), .(EVTYPE), summarise, total.health = sum(health))
summary(healthByEvtype)
healthByEvtype <- transform(healthByEvtype, EVTYPE = reorder(EVTYPE, total.health))[1:20,]
summary(healthByEvtype)
ggplot(healthByEvtype)+ geom_bar(aes(x=EVTYPE,y=total.health), stat="identity", fill="gray") +
coord_flip() +  theme(axis.text.y=element_text(size=rel(0.8)))
healthByEvtype <- ddply(subset(stormData, health > 0), .(EVTYPE), summarise, total.health = sum(health))
max(healthByEvtype$total.health)
sumByEvtype <- transform(healthByEvtype, EVTYPE = reorder(EVTYPE, total.health))
sumByEvtype[1,]
View(sumByEvtype)
sumByEvtype <- healthByEvtype[order(healthByEvtype$total.health),]
View(sumByEvtype)
sumByEvtype <- healthByEvtype[order(-healthByEvtype$total.health),][1:20]
sumByEvtype <- healthByEvtype[order(-healthByEvtype$total.health),][1:20,]
ggplot(sumByEvtype)+ geom_bar(aes(x=EVTYPE,y=total.health), stat="identity", fill="gray") +
coord_flip() +  theme(axis.text.y=element_text(size=rel(0.8)))
sumByEvtype <- transform(sumByEvtype, EVTYPE = reorder(EVTYPE, total.health))
summary(sumByEvtype)
ggplot(sumByEvtype)+ geom_bar(aes(x=EVTYPE,y=total.health), stat="identity", fill="gray") +
coord_flip() +  theme(axis.text.y=element_text(size=rel(0.8)))
zipFile <- bzfile(description="./data/repdata-data-StormData.csv.bz2",open="r")
